
!!!!!!!!!!!!!!!!! Parameters !!!!!!!!!!!!!!!!!
rho_s = 1000.d0 ! riser density 1000 kg/m3
L_s= 0.200d0    ! riser length 200mm
De_s = 0.010d0  ! riser outer diameter 10mm
Thic_riser = De_s/2.0 
Di_s = 0.0      ! riser inner diameter 
Dhydro = De_s   ! riser hydrodynamic diameter   
E_s = 0.5d9     ! riser Young modulus
T_s = 0.d0      ! riser tension
 

! Dimensionless Variables (9)
ep = 0.02       ! fluid damping in line-flow wake
eq = 0.04       ! fluid damping in cross-flow wake
  
Ap = 96.d0      ! coupling coefficient line-flow wake 
Aq = 12.d0      ! coupling coefficient cross-flow wake 
 
Ca = 1.d0       ! added mass coefficient, fixed 
Cm = Ca + 1.0
C0D = 1.2d0     ! drag mean coefficient 
C0L = 0.30d0     ! lift mean coefficient
CiD0 = 0.2d0    ! drag coefficient by fluctuating induced by the wake
CiL0 = 0.00d0 
CT = 0.0

! fluid Variables    
rho_f = 1000.d0 ! 1000 kg/m3
phi_f = 0.d0    ! angle between the fluid velocity and the cross section in degress
U_f   = 0.05d0  ! fluid velocity   5cm/s
pi = 3.1416

Ir   = (pi*De_s**4)/64.d0 - (pi*Di_s**4)/64.d0 ! Riser Inertia (radial plane)
Depth_sea=1.0
A_s = 0.25*pi*(De_s**2 - Di_s**2)

grav_z=0.0

St = 0.2d0        ! Strouhal number
freq_f = St*U_f/Dhydro
Tp_f = 1.0/freq_f
omega_f = 2.d0*pi*freq_f*cos(phi_f)

!!!!!!!!!!!!!!!!! BEgin Modeling !!!!!!!!!!!!!!!!!
/PREP7  


matpipe=1
MP,DENS,matpipe,rho_s
MP,EX,matpipe,E_s 
MP,PRXY,matpipe,,0.3 

matwat=2                      ! material number id of the ocean
MP,DENS,matwat,rho_f
 


ET,1,PIPE288
SECTYPE,1,PIPE, ,riser 
SECDATA,De_s,Thic_riser,12,0,1,0,0,0, 
KEYOPT,1,4,2 ! Thick pipe

k,1,0,0,-L_s
k,2,0,0,0
L,1,2

Esize_riser=L_s

LESIZE,1,Esize_riser, , , , , , ,1
Lmesh,1


!...................SOLUTION......................
/SOL

ACEL,0,0,grav_z, ! gravity 

D,1,ALL, , , , , , , , , ,     ! Plet BC's

ANTYPE,4 ! Transient Analysis
NLGEOM,0 ! Large displacement

TRNOPT,FULL 
!LUMPM,0
LUMPM,1 ! Lumped mass 
TRNOPT,,,,,,NMK 

 
time_tot = 1.4*Tp_f
dt = 0.001d0
nsteps = time_tot/dt


damp1=0.0
damp2=0.0

newmark1=0.25
newmark2=0.50
beta=newmark1
gamma=newmark2

nimp = 100

p=2.d0         ! initial condition (p) Drag van der Pol oscillator
q=2.d0         ! initial condition (q) Lift van der Pol oscillator
dp=0.d0        ! initial condition (dp/dt) Drag van der Pol oscillator
dq=0.d0        ! initial condition (dq/dt) Drag van der Pol oscillator



Cp = 2.d0*ep*omega_f*(p**2 - 1.d0)
Kp = 4.d0*omega_f**2
Cq = eq*omega_f*(q**2 - 1.d0)
Kq = omega_f**2


Cdrag=C0D 
Clift=0.d0 !C0L

velX=0.0
velY=0.0
acelX=0.0
acelY=0.0
   
U2rel = ( U_f - 0.5d0*velX )**2  + 0.5d0*velY**2 

Fp = Ap*(0.5d0*acelX)/Dhydro  ! External Force condition (Fp)
Fq = Aq*(0.5d0*acelY)/Dhydro  ! External Force condition (Fq)

dp2 = (Fp - Cp*dp - Kp*p) 
dq2 = (Fq - Cq*dq - Kq*q)

*DIM, Pvector, ARRAY, nsteps, 1,
*DIM, Qvector, ARRAY, nsteps, 1,
*DIM, dispX, ARRAY, nsteps, 1,
*DIM, dispY, ARRAY, nsteps, 1,

time_it=0.0
/eof
!************ Begin Loop Time *******************
*DO, it, 1,nsteps

	time_it = time_it +dt

        !Cdrag=0.d0 !(C0D + 0.5*p*CiD0)
	!Clift=0.d0 !(C0L + 0.5*q*CiL0)

	!octype,basic
	!ocdata,Depth_sea,matwat,1,1,1,0      ! suppress added mass and buoyancy
	!octable,,,Clift,Cdrag,CT,Cm            
	

	!octype,curr
	!octable,0.0      ,U_f,phi_f          ! input free surface current speed (z=0)
	!octable,Depth_sea,U_f,phi_f          ! input ocean floor current speed (z=-Depth_sea)


	DELTIM,dt,0,0 
	OUTRES,ERASE
	OUTRES,ALL,-1 
	AUTOTS,0
	ALPHAD,damp1 
	BETAD,damp2  
	TIME,time_it
	TINTP,'',newmark1,newmark2
        TINTP,0.0 
        KBC,1 ! stepped 

	! Begin.VIV Drag oscilator
       	Cp = 2.d0*ep*omega_f*(p**2 - 1.d0)
       	Fp = Ap*(0.5d0*acelX)/Dhydro
       
       
       	p_pred  = p  + dt*dp + 0.5d0*dt*dt*(1.d0-2.d0*beta)*dp2  ! p predictor
       	dp_pred = dp +  0.5d0*dt*dt*(1.d0-2.d0*beta)*dp2         ! dp/dt predictor
       
           dp2 = (Fp - Cp*dp_pred - Kp*p_pred)   ! d2p/dt2 (n+1)
           
       	p  = p_pred + beta*dt*dt*dp2    
       	dp = dp_pred + gamma*dt*dp2    
       	Pvector(it,1)=p

       	! End.VIV Drag oscilator


       ! Begin.VIV Lift oscilator
       Cq = eq*omega_f*(q**2 - 1.d0)
       Kq = omega_f**2
       Fq = Aq*(0.5d0*acelY)/Dhydro
       
       q_pred  = q  + dt*dq + 0.5d0*dt*dt*(1.d0-2.d0*beta)*dq2  ! p predictor
       dq_pred = dq +  0.5d0*dt*dt*(1.d0-2.d0*beta)*dq2         ! dp/dt predictor
       
           dq2 = (Fq - Cq*dq_pred - Kq*q_pred)   ! d2p/dt2 (n+1)
           
       q  = q_pred + beta*dt*dt*dq2    
       dq = dq_pred + gamma*dt*dq2    
       Qvector(it,1)=q
       ! End.VIV Lift oscilator
       

SOLVE

       velX=VX(2)
       velY=VY(2)

       U2rel = ( U_f - 0.5d0*velX )**2  + 0.5d0*velY**2
       Flift = -0.5*0.5*q*C0L*rho_f*Dhydro*U2rel
       Fdrag = 0.5*(C0D + 0.5*p*CiD0)*rho_f*Dhydro*U2rel

       SFBEAM,1,4,PRES,Fdrag,Fdrag, , , , ,0 
       SFBEAM,1,5,PRES,Flift,Flift, , , , ,0  

       acelX=AX(2) 
       acelY=AY(2) 

       dispX(it,1)=UX(2)/De_s
       dispY(it,1)=UY(2)/De_s

*ENDDO
!************ End Loop Time *******************  
save

!!!!!!!!!!!!!!!!! End Modeling !!!!!!!!!!!!!!!!!



